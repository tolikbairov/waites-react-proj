{"version":3,"sources":["components/TableComponent/TableComponent.js","components/Pagination/Pagination.js","components/App.js","index.js"],"names":["TableComponent","props","todos","Table","dark","map","todo","id","userId","title","completed","PaginationComp","todosPerPage","totalTodos","paginate","currentPage","pageNumbers","i","Math","ceil","push","Pagination","PaginationItem","PaginationLink","first","href","onClick","previous","number","uuid","next","last","length","App","useState","appState","setAppState","setCurrentPage","setTodosPerPage","sortType","setSortType","useEffect","getTodos","a","axios","get","res","console","log","allTodos","data","type","sortProp","Title","Completed","sorted","sort","b","fa","toLowerCase","fb","toString","sortArray","lastTodoIndex","firstTodoIndex","currentTodos","slice","Container","fluid","Form","className","FormGroup","Label","for","Input","name","onChange","e","currentTarget","value","pageNumber","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.8e375521.chunk.js","sourcesContent":["// import { Component } from \"react\";\nimport { Table } from \"reactstrap\";\nfunction TableComponent(props) {\n  const todos = props.todos;\n  return (\n    <Table dark>\n      <thead>\n        <tr>\n          <th>id</th>\n          <th>user id</th>\n          <th>Title</th>\n          <th>Completed</th>\n        </tr>\n      </thead>\n      <tbody>\n        {todos &&\n          todos.map((todo) => (\n            <tr key={todo.id}>\n              <td>{todo.id}</td>\n              <td>{todo.userId}</td>\n              <td>{todo.title}</td>\n              <td>{todo.completed ? \"true\" : \"false\"}</td>\n            </tr>\n          ))}\n      </tbody>\n    </Table>\n  );\n}\nexport default TableComponent;\n","import { Pagination, PaginationItem, PaginationLink } from \"reactstrap\";\nimport uuid from \"react-uuid\";\nconst PaginationComp = ({\n  todosPerPage,\n  totalTodos,\n  paginate,\n  currentPage,\n}) => {\n  const pageNumbers = [];\n  for (let i = 1; i <= Math.ceil(totalTodos / todosPerPage); i += 1) {\n    pageNumbers.push(i);\n  }\n  return (\n    <>\n      <Pagination aria-label=\"Page navigation example\">\n        <PaginationItem>\n          <PaginationLink first href=\"#\" onClick={() => paginate(1)} />\n        </PaginationItem>\n        <PaginationItem>\n          <PaginationLink\n            previous\n            href=\"#\"\n            onClick={() => paginate(currentPage - 1)}\n          />\n        </PaginationItem>\n        {pageNumbers.map((number) => (\n          <PaginationItem key={uuid()}>\n            <PaginationLink href=\"#\" onClick={() => paginate(number)}>\n              {number}\n            </PaginationLink>\n          </PaginationItem>\n        ))}\n\n        <PaginationItem>\n          <PaginationLink\n            next\n            href=\"#\"\n            onClick={() => paginate(currentPage + 1)}\n          />\n        </PaginationItem>\n        <PaginationItem>\n          <PaginationLink\n            last\n            href=\"#\"\n            onClick={() => paginate(pageNumbers.length)}\n          />\n        </PaginationItem>\n      </Pagination>\n    </>\n  );\n};\nexport default PaginationComp;\n","import \"./App.css\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport TableComponent from \"./TableComponent/TableComponent\";\nimport PaginationComp from \"./Pagination/Pagination\";\nimport { Form, FormGroup, Label, Input, Container } from \"reactstrap\";\nexport default function App() {\n  const [appState, setAppState] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [todosPerPage, setTodosPerPage] = useState(10);\n  const [sortType, setSortType] = useState(\"Todo Id\");\n  useEffect(() => {\n    const apiUrl = \"https://jsonplaceholder.typicode.com/todos/\";\n    const getTodos = async () => {\n      const res = await axios.get(apiUrl);\n      console.log(res);\n      const allTodos = res.data;\n      console.log(allTodos);\n      setAppState(allTodos);\n    };\n    getTodos();\n  }, []);\n  useEffect(() => {\n    const sortArray = (type) => {\n      const types = {\n        \"Todo Id\": \"id\",\n        \"User Id\": \"userId\",\n        Title: \"title\",\n        Completed: \"completed\",\n      };\n\n      const sortProp = types[type];\n\n      let sorted = [];\n\n      if (sortProp === \"id\" || sortProp === \"userId\")\n        sorted = [...appState].sort((a, b) => {\n          return a[sortProp] - b[sortProp];\n        });\n      else if (sortProp === \"title\") {\n        sorted = [...appState].sort((a, b) => {\n          let fa = a[sortProp].toLowerCase(),\n            fb = b[sortProp].toLowerCase();\n\n          if (fa < fb) {\n            return -1;\n          }\n          if (fa > fb) {\n            return 1;\n          }\n          return 0;\n        });\n      } else if (sortProp === \"completed\") {\n        sorted = [...appState].sort((a, b) => {\n          let fa = a[sortProp].toString().toLowerCase(),\n            fb = b[sortProp].toString().toLowerCase();\n\n          if (fa < fb) {\n            return -1;\n          }\n          if (fa > fb) {\n            return 1;\n          }\n          return 0;\n        });\n      }\n      console.log(sorted);\n      setAppState(sorted);\n    };\n\n    sortArray(sortType); // eslint-disable-next-line\n  }, [sortType]);\n  const lastTodoIndex = currentPage * todosPerPage;\n  const firstTodoIndex = lastTodoIndex - todosPerPage;\n  const currentTodos = appState.slice(firstTodoIndex, lastTodoIndex);\n  const paginate = (pageNumber) => {\n    setCurrentPage(pageNumber);\n  };\n  return (\n    <>\n      <Container fluid={true}>\n        <Form>\n          <div className=\"d-flex justify-content-end\">\n            <FormGroup>\n              <Label for=\"exampleSelect\">select items per page</Label>\n              <Input\n                type=\"select\"\n                name=\"select\"\n                id=\"exampleSelect\"\n                onChange={(e) => {\n                  setTodosPerPage(e.currentTarget.value);\n                }}\n              >\n                <option>10</option>\n                <option>20</option>\n                <option>30</option>\n                <option>40</option>\n                <option>50</option>\n              </Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"sortItems\">sort by</Label>\n              <Input\n                type=\"select\"\n                name=\"select\"\n                id=\"sortItems\"\n                onChange={(e) => {\n                  setSortType(e.currentTarget.value);\n                }}\n              >\n                <option>Todo Id</option>\n                <option>User Id</option>\n                <option>Title</option>\n                <option>Completed</option>\n              </Input>\n            </FormGroup>{\" \"}\n          </div>\n        </Form>\n        <TableComponent todos={currentTodos}></TableComponent>\n        <PaginationComp\n          todosPerPage={todosPerPage}\n          totalTodos={appState.length}\n          paginate={paginate}\n          currentPage={currentPage}\n        ></PaginationComp>{\" \"}\n      </Container>\n    </>\n  );\n}\n","import ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}
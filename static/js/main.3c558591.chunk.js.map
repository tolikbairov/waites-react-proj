{"version":3,"sources":["views/UserDetailsView.js","components/deleteModal/DeleteModal.js","components/EditModal/EditModal.js","components/TableComponent/TableComponent.js","components/Pagination/Pagination.js","components/MainPage/MainPage.js","components/Navigation/Navigation.js","components/App.js","index.js"],"names":["UserDetailsView","props","location","propsSearch","to","title","console","log","DeleteModal","modal","toggle","onEdit","todoId","useState","person","setPerson","comment","setComment","personDirty","setPersonDirty","commentDirty","setCommentDirty","personError","setPersonError","commentError","setCommentError","formValid","setFormValid","useEffect","blurHandler","e","target","name","Modal","isOpen","ModalHeader","ModalBody","Form","inline","FormGroup","className","Label","for","style","color","Input","type","id","value","placeholder","onBlur","onChange","replace","RegExp","trim","length","personHandler","rows","commentHandler","ModalFooter","Button","disabled","onClick","preventDefault","EditModal","titleText","setTitleText","currentTarget","TableComponent","todos","setModal","deletemodal","setDeleteModal","setTodoId","url","useRouteMatch","toggleDel","Table","dark","map","todo","userId","completed","ButtonGroup","pathname","PaginationComp","todosPerPage","totalTodos","paginate","currentPage","pageNumbers","i","Math","ceil","push","Pagination","PaginationItem","PaginationLink","first","href","previous","number","uuid","next","last","App","appState","setAppState","setCurrentPage","setTodosPerPage","sortType","setSortType","getTodos","a","axios","get","res","allTodos","data","sortProp","Title","Completed","sorted","sort","b","fa","toLowerCase","fb","toString","sortArray","lastTodoIndex","firstTodoIndex","currentTodos","slice","prevState","pageNumber","Navigation","exact","Container","fluid","path","component","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.3c558591.chunk.js","sourcesContent":["import { Redirect } from \"react-router-dom\";\r\n\r\nexport default function UserDetailsView(props) {\r\n  // const { userId } = useParams();\r\n  if (!props.location.propsSearch) return <Redirect to=\"/tabledata\" />;\r\n  const { title } = props.location.propsSearch;\r\n  console.log(props.location.propsSearch.title); // Наши переданные данные\r\n  //Но учтите, что они будут доступны только, при переходе по этой ссылке.\r\n  //Если страницу перезагрузить, то получим - undefined.\r\n  //Это решается редиректом обратно, если нет пропса:\r\n\r\n  return (\r\n    <>\r\n      <h1>title:{title}</h1>\r\n      <p>lorem ipsum</p>\r\n    </>\r\n  );\r\n}\r\n","// import React, { useState } from \"react\";\r\nimport { useState, useEffect } from \"react/cjs/react.development\";\r\nimport {\r\n  Form,\r\n  Label,\r\n  FormGroup,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Input,\r\n} from \"reactstrap\";\r\n\r\nconst DeleteModal = (props) => {\r\n  // const { buttonLabel, className } = props;\r\n  const { modal, toggle, onEdit, todoId } = props;\r\n  // const [modal, setModal] = useState(false);\r\n  // // const [unmountOnClose, setUnmountOnClose] = useState(true);\r\n  const [person, setPerson] = useState(\"\");\r\n  const [comment, setComment] = useState(\"\");\r\n  const [personDirty, setPersonDirty] = useState(false);\r\n  const [commentDirty, setCommentDirty] = useState(false);\r\n  const [personError, setPersonError] = useState(\r\n    \"поле должно содержать > 3 символов\"\r\n  );\r\n  const [commentError, setCommentError] = useState(\r\n    \"поле должно содержать > 3 символов\"\r\n  );\r\n  const [formValid, setFormValid] = useState(false);\r\n  // const toggle = () => setModal(!modal);\r\n  // const changeUnmountOnClose = (e) => {\r\n  //   let value = e.target.value;\r\n  //   setUnmountOnClose(JSON.parse(value));\r\n  // };\r\n  useEffect(() => {\r\n    if (personError || commentError) {\r\n      setFormValid(false);\r\n    } else {\r\n      setFormValid(true);\r\n    }\r\n  }, [personError, commentError]);\r\n  const blurHandler = (e) => {\r\n    switch (e.target.name) {\r\n      case \"person\":\r\n        setPersonDirty(true);\r\n        break;\r\n      case \"comment\":\r\n        setCommentDirty(true);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  const personHandler = (e) => {\r\n    const value = e.target.value;\r\n    setPerson(value.replace(new RegExp(\"[0-9]\"), \"\"));\r\n    if (value.trim().length > 2) setPersonError(\"\");\r\n    else setPersonError(\"поле должно содержать > 3 символов\");\r\n  };\r\n  const commentHandler = (e) => {\r\n    const value = e.target.value;\r\n    setComment(value.replace(new RegExp(\"[0-9]\"), \"\"));\r\n    if (value.trim().length > 2) setCommentError(\"\");\r\n    else setCommentError(\"поле должно содержать > 3 символов\");\r\n  };\r\n  return (\r\n    <>\r\n      {/* <Form inline onSubmit={(e) => e.preventDefault()}>\r\n        <FormGroup>\r\n          <Label for=\"unmountOnClose\">UnmountOnClose value</Label>{\" \"}\r\n          <Input\r\n            type=\"select\"\r\n            name=\"unmountOnClose\"\r\n            id=\"unmountOnClose\"\r\n            onChange={changeUnmountOnClose}\r\n          >\r\n            <option value=\"true\">true</option>\r\n            <option value=\"false\">false</option>\r\n          </Input>\r\n        </FormGroup>{\" \"}\r\n        <Button color=\"danger\" onClick={toggle}>\r\n          {buttonLabel}\r\n        </Button>\r\n      </Form> */}\r\n      <Modal\r\n        isOpen={modal}\r\n        toggle={toggle}\r\n        // className={className}\r\n        // unmountOnClose={unmountOnClose}\r\n      >\r\n        <ModalHeader toggle={toggle}>Modal title</ModalHeader>\r\n        <ModalBody>\r\n          {\" \"}\r\n          <Form inline>\r\n            <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\r\n              <Label for=\"person\" className=\"mr-sm-2\">\r\n                Person\r\n              </Label>{\" \"}\r\n              {personDirty && personError && (\r\n                <div style={{ color: \"red\" }}>{personError}</div>\r\n              )}\r\n              <Input\r\n                type=\"text\"\r\n                name=\"person\"\r\n                id=\"person\"\r\n                value={person}\r\n                placeholder=\"write name\"\r\n                onBlur={(e) => blurHandler(e)}\r\n                onChange={(e) => {\r\n                  personHandler(e);\r\n                }}\r\n              />\r\n            </FormGroup>\r\n\r\n            <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\r\n              <Label for=\"comment\" className=\"mr-sm-2\">\r\n                Comment\r\n              </Label>{\" \"}\r\n              {commentDirty && commentError && (\r\n                <div style={{ color: \"red\" }}>{commentError}</div>\r\n              )}\r\n              <Input\r\n                type=\"textarea\"\r\n                name=\"comment\"\r\n                id=\"comment\"\r\n                value={comment}\r\n                placeholder=\"write comment\"\r\n                rows={5}\r\n                onBlur={(e) => blurHandler(e)}\r\n                onChange={(e) => {\r\n                  commentHandler(e);\r\n                }}\r\n              />\r\n            </FormGroup>\r\n          </Form>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          {\" \"}\r\n          <Button\r\n            color=\"primary\"\r\n            disabled={!formValid}\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              onEdit(todoId, `deleted by ${person}`);\r\n              toggle();\r\n            }}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DeleteModal;\r\n","// import React, { useState } from \"react\";\r\nimport { useState } from \"react/cjs/react.development\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Input,\r\n} from \"reactstrap\";\r\n\r\nconst EditModal = (props) => {\r\n  // const { buttonLabel, className } = props;\r\n  const { modal, toggle, onEdit, todoId } = props;\r\n  // const [modal, setModal] = useState(false);\r\n  // // const [unmountOnClose, setUnmountOnClose] = useState(true);\r\n  const [titleText, setTitleText] = useState(\"\");\r\n  // const toggle = () => setModal(!modal);\r\n  // const changeUnmountOnClose = (e) => {\r\n  //   let value = e.target.value;\r\n  //   setUnmountOnClose(JSON.parse(value));\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      {/* <Form inline onSubmit={(e) => e.preventDefault()}>\r\n        <FormGroup>\r\n          <Label for=\"unmountOnClose\">UnmountOnClose value</Label>{\" \"}\r\n          <Input\r\n            type=\"select\"\r\n            name=\"unmountOnClose\"\r\n            id=\"unmountOnClose\"\r\n            onChange={changeUnmountOnClose}\r\n          >\r\n            <option value=\"true\">true</option>\r\n            <option value=\"false\">false</option>\r\n          </Input>\r\n        </FormGroup>{\" \"}\r\n        <Button color=\"danger\" onClick={toggle}>\r\n          {buttonLabel}\r\n        </Button>\r\n      </Form> */}\r\n      <Modal\r\n        isOpen={modal}\r\n        toggle={toggle}\r\n        // className={className}\r\n        // unmountOnClose={unmountOnClose}\r\n      >\r\n        <ModalHeader toggle={toggle}>Modal title</ModalHeader>\r\n        <ModalBody>\r\n          <Input\r\n            type=\"textarea\"\r\n            placeholder=\"Add text to title\"\r\n            rows={2}\r\n            onChange={(e) => {\r\n              setTitleText(e.currentTarget.value);\r\n            }}\r\n          />\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              onEdit(todoId, titleText);\r\n              toggle();\r\n            }}\r\n          >\r\n            Edit\r\n          </Button>{\" \"}\r\n          <Button color=\"secondary\" onClick={toggle}>\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditModal;\r\n","// import { Component } from \"react\";\r\nimport React, { useState } from \"react\";\r\nimport { Link, useRouteMatch } from \"react-router-dom\";\r\n\r\nimport { Table, Button, ButtonGroup } from \"reactstrap\";\r\nimport DeleteModal from \"../deleteModal/DeleteModal\";\r\nimport EditModal from \"../EditModal/EditModal\";\r\nfunction TableComponent(props) {\r\n  const todos = props.todos;\r\n  const [modal, setModal] = useState(false);\r\n  const [deletemodal, setDeleteModal] = useState(false);\r\n  const [todoId, setTodoId] = useState(\"1\");\r\n  // const [unmountOnClose, setUnmountOnClose] = useState(true);\r\n  const { url } = useRouteMatch();\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n    console.log(\"toggle\", modal);\r\n  };\r\n  const toggleDel = () => {\r\n    setDeleteModal(!deletemodal);\r\n    // console.log(\"toggle\", modal);\r\n  };\r\n  return (\r\n    <Table dark>\r\n      <thead>\r\n        <tr>\r\n          <th>id</th>\r\n          <th>user id</th>\r\n          <th>Title</th>\r\n          <th>Completed</th>\r\n          <th>Actions</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {todos &&\r\n          todos.map((todo) => (\r\n            <tr key={todo.id}>\r\n              <td>{todo.id}</td>\r\n              <td>{todo.userId}</td>\r\n              <td>{todo.title}</td>\r\n              <td>{todo.completed ? \"true\" : \"false\"}</td>\r\n              <td>\r\n                <ButtonGroup>\r\n                  <Link\r\n                    to={{\r\n                      pathname: `${url}/${todo.id}`,\r\n                      propsSearch: { title: todo.title },\r\n                    }}\r\n                  >\r\n                    <Button color=\"primary\">view</Button>\r\n                  </Link>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    onClick={() => {\r\n                      setTodoId(todo.id);\r\n                      toggle();\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </Button>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    onClick={() => {\r\n                      setTodoId(todo.id);\r\n                      toggleDel();\r\n                    }}\r\n                  >\r\n                    delete\r\n                  </Button>\r\n                </ButtonGroup>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n      </tbody>\r\n      <EditModal\r\n        modal={modal}\r\n        toggle={toggle}\r\n        onEdit={props.onEdit}\r\n        todoId={todoId}\r\n      ></EditModal>\r\n      <DeleteModal\r\n        modal={deletemodal}\r\n        toggle={toggleDel}\r\n        onEdit={props.onEdit}\r\n        todoId={todoId}\r\n      ></DeleteModal>\r\n    </Table>\r\n  );\r\n}\r\nexport default TableComponent;\r\n","import { Pagination, PaginationItem, PaginationLink } from \"reactstrap\";\nimport uuid from \"react-uuid\";\nconst PaginationComp = ({\n  todosPerPage,\n  totalTodos,\n  paginate,\n  currentPage,\n}) => {\n  const pageNumbers = [];\n  for (let i = 1; i <= Math.ceil(totalTodos / todosPerPage); i += 1) {\n    pageNumbers.push(i);\n  }\n  return (\n    <>\n      <Pagination aria-label=\"Page navigation example\">\n        <PaginationItem>\n          <PaginationLink first href=\"#\" onClick={() => paginate(1)} />\n        </PaginationItem>\n        <PaginationItem>\n          <PaginationLink\n            previous\n            href=\"#\"\n            onClick={() => paginate(currentPage - 1)}\n          />\n        </PaginationItem>\n        {pageNumbers.map((number) => (\n          <PaginationItem key={uuid()}>\n            <PaginationLink href=\"#\" onClick={() => paginate(number)}>\n              {number}\n            </PaginationLink>\n          </PaginationItem>\n        ))}\n\n        <PaginationItem>\n          <PaginationLink\n            next\n            href=\"#\"\n            onClick={() => paginate(currentPage + 1)}\n          />\n        </PaginationItem>\n        <PaginationItem>\n          <PaginationLink\n            last\n            href=\"#\"\n            onClick={() => paginate(pageNumbers.length)}\n          />\n        </PaginationItem>\n      </Pagination>\n    </>\n  );\n};\nexport default PaginationComp;\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport TableComponent from \"./../TableComponent/TableComponent\";\r\nimport PaginationComp from \"./../Pagination/Pagination\";\r\nimport { Form, FormGroup, Label, Input } from \"reactstrap\";\r\nexport default function App() {\r\n  const [appState, setAppState] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [todosPerPage, setTodosPerPage] = useState(10);\r\n  const [sortType, setSortType] = useState(\"Todo Id\");\r\n  useEffect(() => {\r\n    const apiUrl = \"https://jsonplaceholder.typicode.com/todos/\";\r\n    const getTodos = async () => {\r\n      const res = await axios.get(apiUrl);\r\n      console.log(res);\r\n      const allTodos = res.data;\r\n      console.log(allTodos);\r\n      setAppState(allTodos);\r\n    };\r\n    getTodos();\r\n  }, []);\r\n  useEffect(() => {\r\n    const sortArray = (type) => {\r\n      const types = {\r\n        \"Todo Id\": \"id\",\r\n        \"User Id\": \"userId\",\r\n        Title: \"title\",\r\n        Completed: \"completed\",\r\n      };\r\n\r\n      const sortProp = types[type];\r\n\r\n      let sorted = [];\r\n\r\n      if (sortProp === \"id\" || sortProp === \"userId\")\r\n        sorted = [...appState].sort((a, b) => {\r\n          return a[sortProp] - b[sortProp];\r\n        });\r\n      else if (sortProp === \"title\") {\r\n        sorted = [...appState].sort((a, b) => {\r\n          let fa = a[sortProp].toLowerCase(),\r\n            fb = b[sortProp].toLowerCase();\r\n\r\n          if (fa < fb) {\r\n            return -1;\r\n          }\r\n          if (fa > fb) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        });\r\n      } else if (sortProp === \"completed\") {\r\n        sorted = [...appState].sort((a, b) => {\r\n          let fa = a[sortProp].toString().toLowerCase(),\r\n            fb = b[sortProp].toString().toLowerCase();\r\n\r\n          if (fa < fb) {\r\n            return -1;\r\n          }\r\n          if (fa > fb) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        });\r\n      }\r\n      console.log(sorted);\r\n      setAppState(sorted);\r\n    };\r\n\r\n    sortArray(sortType); // eslint-disable-next-line\r\n  }, [sortType]);\r\n  const lastTodoIndex = currentPage * todosPerPage;\r\n  const firstTodoIndex = lastTodoIndex - todosPerPage;\r\n  const currentTodos = appState.slice(firstTodoIndex, lastTodoIndex);\r\n  const paginate = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n  const editTodo = (todoId, titleText) => {\r\n    setAppState((prevState) =>\r\n      prevState.map((todo) =>\r\n        todo.id === todoId\r\n          ? { ...todo, title: todo.title + \" \" + titleText }\r\n          : todo\r\n      )\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      <Form>\r\n        <div className=\"d-flex justify-content-end\">\r\n          <FormGroup>\r\n            <Label for=\"exampleSelect\">select items per page</Label>\r\n            <Input\r\n              type=\"select\"\r\n              name=\"select\"\r\n              id=\"exampleSelect\"\r\n              onChange={(e) => {\r\n                setTodosPerPage(e.currentTarget.value);\r\n                setCurrentPage(1);\r\n              }}\r\n            >\r\n              <option>10</option>\r\n              <option>20</option>\r\n              <option>30</option>\r\n              <option>40</option>\r\n              <option>50</option>\r\n            </Input>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"sortItems\">sort by</Label>\r\n            <Input\r\n              type=\"select\"\r\n              name=\"select\"\r\n              id=\"sortItems\"\r\n              onChange={(e) => {\r\n                setSortType(e.currentTarget.value);\r\n              }}\r\n            >\r\n              <option>Todo Id</option>\r\n              <option>User Id</option>\r\n              <option>Title</option>\r\n              <option>Completed</option>\r\n            </Input>\r\n          </FormGroup>{\" \"}\r\n        </div>\r\n      </Form>\r\n      <TableComponent todos={currentTodos} onEdit={editTodo}></TableComponent>\r\n      <PaginationComp\r\n        todosPerPage={todosPerPage}\r\n        totalTodos={appState.length}\r\n        paginate={paginate}\r\n        currentPage={currentPage}\r\n      ></PaginationComp>{\" \"}\r\n    </>\r\n  );\r\n}\r\n","import { NavLink as RouterNavLink } from \"react-router-dom\";\r\n\r\nconst Navigation = (props) => {\r\n  return (\r\n    <RouterNavLink className=\"link\" exact to=\"/tabledata\">\r\n      Main\r\n    </RouterNavLink>\r\n  );\r\n};\r\nexport default Navigation;\r\n","import { Switch, Route } from \"react-router\";\r\nimport { Container } from \"reactstrap\";\r\nimport UserDetailsView from \"../views/UserDetailsView\";\r\nimport \"./App.css\";\r\nimport MainPage from \"./MainPage/MainPage\";\r\nimport Navigation from \"./Navigation/Navigation\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <>\r\n      <Container fluid={true}>\r\n        <Navigation></Navigation>\r\n        <Switch>\r\n          <Route path=\"/tabledata\" exact>\r\n            <MainPage></MainPage>\r\n          </Route>\r\n          <Route path=\"/tabledata/:userId\" component={UserDetailsView}></Route>\r\n        </Switch>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}